{
    "swagger": "2.0",
    "info": {
        "description": "A REST server to manage scooter trips and scooter events",
        "title": "Scootin Aboot Journey API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/scooter/trip-event": {
            "post": {
                "description": "saves the events generated by scooter when trip is started, ended and during the trip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scooter-api"
                ],
                "summary": "saves the trip event generated by scooter",
                "parameters": [
                    {
                        "description": "save trip event request",
                        "name": "saveScooterTripEventRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.saveScooterTripEventRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "api_key",
                        "name": "api_key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.saveScooterTripEventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    }
                }
            }
        },
        "/auth/user/available-scooters": {
            "get": {
                "description": "returns available scooters within given radius sorted by nearest first",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-api"
                ],
                "summary": "returns available scooters within given area",
                "parameters": [
                    {
                        "type": "number",
                        "description": "latitude",
                        "name": "latitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "longitude",
                        "name": "longitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "radius",
                        "name": "radius",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "api_key",
                        "name": "api_key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.getAvailableScootersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    }
                }
            }
        },
        "/auth/user/begin-trip": {
            "put": {
                "description": "begins the trip for given user with given scooter, scooter becomes unavailable for other users once the trip begins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-api"
                ],
                "summary": "begins the trip",
                "parameters": [
                    {
                        "description": "begin trip request",
                        "name": "beginTripRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.beginTripRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "api_key",
                        "name": "api_key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.beginTripResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    }
                }
            }
        },
        "/auth/user/end-trip": {
            "put": {
                "description": "ends the trip for given user with given scooter, scooter becomes available for other users once the trip ends",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-api"
                ],
                "summary": "ends the trip",
                "parameters": [
                    {
                        "description": "end trip request",
                        "name": "endTripRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.endTripRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "api_key",
                        "name": "api_key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.endTripResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.errorRespose"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rest.beginTripRequest": {
            "type": "object",
            "required": [
                "scooter_id",
                "user_id"
            ],
            "properties": {
                "scooter_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "rest.beginTripResponse": {
            "type": "object",
            "properties": {
                "scooter_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "rest.endTripRequest": {
            "type": "object",
            "required": [
                "scooter_id",
                "user_id"
            ],
            "properties": {
                "scooter_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "rest.endTripResponse": {
            "type": "object",
            "properties": {
                "scooter_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "rest.errorRespose": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "rest.geoLocation": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "rest.getAvailableScootersResponse": {
            "type": "object",
            "properties": {
                "scooters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rest.scooter"
                    }
                }
            }
        },
        "rest.saveScooterTripEventRequest": {
            "type": "object",
            "required": [
                "created_at",
                "scooter_id",
                "type",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "location": {
                    "type": "object",
                    "$ref": "#/definitions/rest.geoLocation"
                },
                "scooter_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "rest.saveScooterTripEventResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "rest.scooter": {
            "type": "object",
            "properties": {
                "current_user_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_available": {
                    "type": "boolean"
                },
                "location": {
                    "type": "object",
                    "$ref": "#/definitions/rest.geoLocation"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}